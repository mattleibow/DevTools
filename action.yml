name: 'Apply Label Using AI'

description: 'Use AI to find the best label to apply to a new issue'

inputs:
  # inputs to allow for configuration, only one should be used
  # at a time and the inputs are used in the order of precedence
  # - exact labels (labels)
  # - label patern matching (label-pattern)
  labels:
    description: 'The list of labels to look through.'
  label-pattern:
    description: 'The regex pattern to use to match the labels.'
  # inputs to allow for control of the action
  apply-label:
    default: 'true'
    description: 'Whether or not to apply the label automatically.'
  add-comment:
    default: 'true'
    description: 'Whether or not to Write a comment on the issue after applying the label with an explanation.'
  # inputs to allow for testing purposes
  issue-json:
    description: 'The json object of the issue to be labeled.'
    deprecationMessage: 'This is deprecated and will be removed.'

outputs:
  label:
    description: "The label that will be applied to the issue"
    value: ${{ steps.get-label.outputs.SELECTED_LABEL }}
  reason:
    description: "The reasopn for the label being selected"
    value: ${{ steps.get-label.outputs.SELECTED_REASON }}

runs:
  using: "composite"
  steps:

    - name: Find the best label using AI
      id: get-label
      shell: pwsh
      env:
        GH_TOKEN: ${{ github.token }}                       # for the gh CLI tool
        GITHUB_ISSUE: ${{ toJson(github.event.issue) }}     # the issue json from the event
        LABEL_NAMES: ${{ inputs.labels }}                   # the exact labels to look through
        LABEL_PATTERN: ${{ inputs.label-pattern }}          # the label pattern to match
        GITHUB_ISSUE_DEPRECATED: ${{ inputs.issue-json }}   # testing purposes only
      run: |
        "Finding the best label using AI.."

        Write-Output "::group::Validating inputs..."
        # Parse the issue json from the event or fall back
        # to the deprecated method of reading the issue json
        # from the environment variable
        $issue = "$env:GITHUB_ISSUE" | ConvertFrom-Json
        if (-not $issue) {
          $issue = "$env:GITHUB_ISSUE_DEPRECATED" | ConvertFrom-Json
        }

        if (-not $issue) {
          Write-Error "No issue was found to label."
          Write-Output "::endgroup::"
          exit 1
        }
        
        Write-Output "Issue Number:"
        Write-Output $issue.number
        Write-Output "Issue Title:"
        Write-Output $issue.title
        Write-Output "Issue Body:"
        Write-Output $issue.body

        Write-Output "Labels:"
        if ($env:LABEL_NAMES) {
          $labelsNames =
            $env:LABEL_NAMES -split '\r|\n' |
            ForEach-Object { $_.Trim() } |
            Where-Object { $_ -ne '' }
          Write-Output "- Labels:"
          $labelsNames | ForEach-Object { Write-Output "  - $_" }
        } elseif ($env:LABEL_PATTERN) {
          $labelRegex = "$env:LABEL_PATTERN"
          Write-Output "- Pattern:"
          Write-Output "  $labelRegex"
        }

        Write-Output "::endgroup::"

        Write-Output "::group::Asking the AI to find the best label..."
        $body = ConvertTo-Json -InputObject @{
          version = 1
          issue = @{
            owner = "${{ github.event.repository.owner.login }}"
            repo = "${{ github.event.repository.name }}"
            number = $issue.number
          }
          labels = @{
              names = $labelsNames
              pattern = $labelRegex
          }
        }

        $hostAddress = "https://labeled-by-ai.braveisland-12c152b6.southafricanorth.azurecontainerapps.io"
        $uri = "$hostAddress/api/label"
        $headers = @{
          'X-GitHub-Token' = "$env:GH_TOKEN"
        }
        $response = Invoke-RestMethod `
          -Method Post `
          -Uri $uri `
          -Body $body `
          -ContentType 'application/json' `
          -Headers $headers `
          -StatusCodeVariable responseStatusCode

        Write-Output "The AI replied with a status code of: $responseStatusCode"

        if (-not $response) {
          Write-Error "Failed to get a response from the AI service."
          Write-Output "::endgroup::"
          exit 1
        }

        if (-not $response.label) {
          Write-Warning "No labels matched the contents of this issue."
          Write-Output "::endgroup::"
          exit 0
        }

        Write-Output "::endgroup::"

        Write-Output "Found a great label to apply to the issue: $($response.label)"
        Write-Output "The reasoning is: $($response.reason)"

        "ISSUE_NUMBER=$($issue.number)" >> $env:GITHUB_OUTPUT
        "SELECTED_LABEL=$($response.label)" >> $env:GITHUB_OUTPUT
        "SELECTED_REASON=$($response.reason)" >> $env:GITHUB_OUTPUT

    - name: Apply the selected label to the issue
      shell: pwsh
      id: apply-label
      if: ${{ inputs.apply-label == 'true' && steps.get-label.outputs.SELECTED_LABEL != null }}
      env:
        GH_TOKEN: ${{ github.token }}
        ISSUE_NUMBER: ${{ steps.get-label.outputs.ISSUE_NUMBER }}
        SELECTED_LABEL: ${{ steps.get-label.outputs.SELECTED_LABEL }}
        SELECTED_REASON: ${{ steps.get-label.outputs.SELECTED_REASON }}
      run: |
        "Applying the selected label to the issue.."

        Write-Output "::group::Applying the label..."

        $repoUrl = "${{ github.repositoryUrl }}"
        $issueNumber = "$env:ISSUE_NUMBER"
        $label = "$env:SELECTED_LABEL"

        gh issue edit --repo "$repoUrl" $issueNumber --add-label "$label"

        Write-Output "::endgroup::"

    - name: Add a comment on the issue with a reason for the label
      shell: pwsh
      id: add-comment
      if: ${{ inputs.add-comment == 'true' && steps.get-label.outputs.SELECTED_LABEL != null && steps.get-label.outputs.SELECTED_REASON != null }}
      env:
        GH_TOKEN: ${{ github.token }}
        ISSUE_NUMBER: ${{ steps.get-label.outputs.ISSUE_NUMBER }}
        SELECTED_LABEL: ${{ steps.get-label.outputs.SELECTED_LABEL }}
        SELECTED_REASON: ${{ steps.get-label.outputs.SELECTED_REASON }}
      run: |
        "Adding a comment on the issue with a reason for the label.."

        Write-Output "::group::Adding the comment..."

        $repoUrl = "${{ github.repositoryUrl }}"
        $issueNumber = "$env:ISSUE_NUMBER"
        $label = "$env:SELECTED_LABEL"
        $reason = "$env:SELECTED_REASON"

        $body = 
          "The AI has selected the label ``$label`` for this issue and gave the following reason: `n`n" +
          "> $reason `n`n" +
          "If this is not correct, you can change the label to the correct one."

        gh issue comment --repo "$repoUrl" $issueNumber --body "$body"

        Write-Output "::endgroup::"
